---
- name: Clone tree-sitter repos
  git:
    repo: https://github.com/{{ item.repo }}
    dest: ~/dev/{{ item.repo }}
    version: '{{ item.version }}'
    force: true
  async: 300
  poll: 0
  register: git_clone
  loop:
    - { repo: 'tree-sitter/tree-sitter-java', version: 'master' }
    - { repo: 'tree-sitter/tree-sitter-html', version: 'master' }
    - { repo: 'tree-sitter/tree-sitter-json', version: 'master' }
    - { repo: 'tree-sitter/tree-sitter-haskell', version: 'master' }
    - { repo: 'tree-sitter/tree-sitter-c-sharp', version: 'master' }
    - { repo: 'tree-sitter/tree-sitter-rust', version: 'master' }
    - { repo: 'nvim-treesitter/tree-sitter-query', version: 'master' }
    - { repo: 'stsewd/tree-sitter-rst', version: 'master' }
    - { repo: 'maxxnino/tree-sitter-zig', version: 'main' }
    - { repo: 'ikatyang/tree-sitter-yaml', version: 'master' }
    - { repo: 'ikatyang/tree-sitter-toml', version: 'master' }
    - { repo: 'PrestonKnopp/tree-sitter-gdscript', version: 'master' }
    - { repo: 'tree-sitter-grammars/tree-sitter-xml', version: 'master' }
- name: Ensure nvim parser and query folders exists
  file:
    path: ~/.config/nvim/{{ item }}
    state: directory
    mode: '0755'
  loop:
    - parser/
    - queries/
    - queries/java
    - queries/rst
    - queries/html
    - queries/json
    - queries/haskell
    - queries/c_sharp
    - queries/zig
    - queries/yaml
    - queries/gdscript
    - queries/toml
    - queries/query
    - queries/rust
    - queries/xml

- name: Wait for git clone
  async_status:
    jid: "{{ item.ansible_job_id }}"
  register: git_clone_jobs
  until: git_clone_jobs.finished
  loop: "{{ git_clone.results }}"

- name: Generate parsers
  shell: cc -O2 -o ~/.config/nvim/parser/{{ item.ft }}.so -I./src {{ item.files }} -shared -Os -lstdc++ -fPIC
  async: 300
  poll: 0
  register: compile_parsers
  args:
    chdir: ~/dev/{{ item.repo }}
  loop:
    - repo: 'tree-sitter/tree-sitter-java'
      ft: 'java'
      files: src/parser.c
    - repo: 'tree-sitter/tree-sitter-haskell'
      ft: 'haskell'
      files: src/parser.c src/scanner.c
    - repo: 'tree-sitter/tree-sitter-html'
      ft: 'html'
      files: src/parser.c src/scanner.c
    - repo: 'nvim-treesitter/tree-sitter-query'
      ft: 'query'
      files: src/parser.c
    - repo: 'stsewd/tree-sitter-rst'
      ft: 'rst'
      files: src/parser.c src/scanner.c
    - repo: 'tree-sitter/tree-sitter-json'
      ft: 'json'
      files: src/parser.c
    - repo: 'tree-sitter/tree-sitter-c-sharp'
      ft: 'c_sharp'
      files: src/parser.c src/scanner.c
    - repo: 'maxxnino/tree-sitter-zig'
      ft: 'zig'
      files: src/parser.c
    - repo: 'ikatyang/tree-sitter-yaml'
      ft: 'yaml'
      files: src/parser.c src/scanner.cc
    - repo: 'ikatyang/tree-sitter-toml'
      ft: 'toml'
      files: src/parser.c src/scanner.c
    - repo: 'PrestonKnopp/tree-sitter-gdscript'
      ft: 'gdscript'
      files: src/parser.c src/scanner.c
    - repo: 'tree-sitter/tree-sitter-rust'
      ft: 'rust'
      files: src/parser.c src/scanner.c
    - repo: 'tree-sitter-grammars/tree-sitter-xml/xml'
      ft: 'xml'
      files: 'src/parser.c src/scanner.c'

- name: Wait for compile parsers
  async_status:
    jid: "{{ item.ansible_job_id }}"
  register: compile_jobs
  until: compile_jobs.finished
  loop: "{{ compile_parsers.results }}"

- name: Copy queries
  copy:
    src: ~/dev/{{ item.src_dir }}/{{ item.file }}
    dest: ~/.config/nvim/queries/{{ item.ft }}/{{ item.file }}
    mode: 0644
  loop:
    - { ft: 'java', src_dir: 'tree-sitter/tree-sitter-java/queries', file: 'tags.scm' }
    - { ft: 'html', src_dir: 'tree-sitter/tree-sitter-html/queries', file: 'highlights.scm' }
    - { ft: 'haskell', src_dir: 'tree-sitter/tree-sitter-haskell/queries', file: 'highlights.scm' }
    - { ft: 'zig', src_dir: 'maxxnino/tree-sitter-zig/queries', file: 'highlights.scm' }
    - { ft: 'zig', src_dir: 'maxxnino/tree-sitter-zig/queries', file: 'injections.scm' }
    - { ft: 'toml', src_dir: 'ikatyang/tree-sitter-toml/queries', file: 'highlights.scm' }
    - { ft: 'xml', src_dir: 'tree-sitter-grammars/tree-sitter-xml/queries/xml', file: 'highlights.scm' }

- name: Fetch queries
  get_url:
    url: https://raw.githubusercontent.com/nvim-treesitter/nvim-treesitter/master/queries/{{ item.ft }}/{{ item.name }}.scm
    dest: ~/.config/nvim/queries/{{ item.ft }}/{{ item.name }}.scm
  loop:
    - { ft: 'json', name: 'highlights' }
    - { ft: 'java', name: 'highlights' }
    - { ft: 'java', name: 'locals' }
    - { ft: 'rst', name: 'highlights' }
    - { ft: 'rst', name: 'injections' }
    - { ft: 'yaml', name: 'highlights' }
    - { ft: 'yaml', name: 'locals' }
    - { ft: 'yaml', name: 'injections' }
    - { ft: 'gdscript', name: 'highlights' }
    - { ft: 'gdscript', name: 'locals' }
    - { ft: 'gdscript', name: 'injections' }
    - { ft: 'query', name: 'highlights' }
    - { ft: 'query', name: 'locals' }
    - { ft: 'query', name: 'injections' }
    - { ft: 'rust', name: 'highlights' }
    - { ft: 'rust', name: 'locals' }
    - { ft: 'rust', name: 'injections' }

- name: Fetch csharp queries
  get_url:
    url: https://raw.githubusercontent.com/nvim-treesitter/nvim-treesitter/master/queries/c_sharp/{{ item }}.scm
    dest: ~/.config/nvim/queries/c_sharp/{{ item }}.scm
  loop:
    - highlights
    - injections
    - locals
